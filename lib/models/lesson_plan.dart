import 'package:floor/floor.dart';
import 'package:intl/intl.dart'; // For date formatting in toMap

@Entity(tableName: 'lesson_plans') // Changed from @entity
class LessonPlan {
  @PrimaryKey() 
  final int? id;
  @ColumnInfo(name: 'class_id')
  final int classId; // Corrected to int
  @ColumnInfo(name: 'teacher_id')
  final String teacherId; // UUID of the teacher
  @ColumnInfo(name: 'subject_name')
  final String subjectName; // Name of the subject
  final String title;
  final String description;
  final DateTime date;
  @ColumnInfo(name: 'document_url')
  final String? documentUrl; // Optional URL for an attached document

  LessonPlan({
    this.id,
    required this.classId,
    required this.teacherId,
    required this.subjectName,
    required this.title,
    required this.description,
    required this.date,
    this.documentUrl,
  });

  factory LessonPlan.fromMap(Map<String, dynamic> map) {
    return LessonPlan(
      id: map['id'] as int?,
      classId: map['class_id'] as int, // Corrected to int
      teacherId: map['teacher_id'] as String,
      subjectName: map['subject_name'] as String,
      title: map['title'] as String,
      description: map['description'] as String,
      date: DateTime.parse(map['date'] as String),
      documentUrl: map['document_url'] as String?,
    );
  }

  Map<String, dynamic> toMap() {
    return {
      // id is not included for inserts if auto-generated by DB
      'class_id': classId,
      'teacher_id': teacherId,
      'subject_name': subjectName,
      'title': title,
      'description': description,
      'date': DateFormat('yyyy-MM-dd').format(date), // Format date for Supabase
      'document_url': documentUrl,
    };
  }
}
